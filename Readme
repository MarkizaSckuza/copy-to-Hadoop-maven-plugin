Copy to hadoop maven plugin Version 1.0 5/31/2016

GENERAL USAGE NOTES
--------------------

* Generally this plugin is developed for easier deploying and copying files to Hadoop system.
* Also it may be used to:
    * transfer files to Hadoop system
    * transfer files to Linux system
* For example, you have written the MapReduce program and you want to push your input file[s] to
  remote Hadoop and your jar file to local system (Linux), then you can use the copy-to-hadoop-maven-
  plugin in one of ways described below.
-----------------------------------------------------------------------------------------------------
Installing plugin
-----------------------------------------------------------------------------------------------------

* Paste to your POM file under <plugins> tag in <build> section:

    <plugin>
        <groupId>org.margo.plugins</groupId>
        <artifactId>copy-to-hadoop-maven-plugin</artifactId>
        <version>1.0</version>
    </plugin>

-----------------------------------------------------------------------------------------------------
Usage example
-----------------------------------------------------------------------------------------------------

* To execute plugin using the deploy phase you need to provide the <executions> section with
    configurations for plugin:

     <executions>
        <execution>
            <id>copy-files</id>
            <goals>
                <goal>copyFile</goal>
                <goal>copyJar</goal>
            </goals>
            <configuration>
                <host>192.168.0.103</host>
                <port>9000<port>
                <inputFileDestination>/your/destination/path/test.txt</inputFileDestination>
                <inputFileSource>\your\file\path\test.txt</inputFileSource>
                <jarFileDestination>/your/destination/path/for/jar/</jarFileDestination>
                <userName>user_name</userName>
                <password>pass_for_user_name</password>
            </configuration>
        </execution>
     </executions>

where:
    host - host of the remote system
    port - [OPTIONAL] port of Hadoop NameNode. By default plugin uses the 8020 port.
    inputFileDestination - the destination path on Hadoop system
    inputFileSource - the source path to file on your Windows which should be copied to Hadoop system
    jarFileDestination - the destination path on Linux system
    userName - the user name for the Linux system
    password - password for the Linux system

    NOTE: the path to jar file is determined during plugin execution, it looks to the build path of
        your project.

** Turn off the default binding to deploy phase of the specified deploy plugin (for ex.
        maven-deploy-plugin) to enable deploying your files by copy-to-hadoop-maven-plugin executing
        the deploy phase:

        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-deploy-plugin</artifactId>
            <version>${deploy.plugin.version}</version>
            <configuration>
                <skip>true</skip>
            </configuration>
        </plugin>

        and add the <phase>deploy</phase> to configuration of copy-to-hadoop-maven-plugin:

            <execution>
                <id>copy-files</id>
                <phase>deploy</phase>
                ...
            </execution>

* To use plugin from console write the similar commands:

    mvn copy:copyFile -Dhost="192.168.0.103" -Dinput.src.path="\your\file\path\test.txt"
        -Dinput.dest.path="/your/destination/path/test.txt"

    to copy file to Hadoop system, where:
        -Dhost - host of the remote system
        -Dport - [OPTIONAL] port of Hadoop NameNode. By default plugin uses the 8020 port.
        -Dinput.src.path - the source path to file on your Windows which should be copied to Hadoop system
        -Dinput.dest.path - the destination path on Hadoop system. Note: you should point at the end the name of file
            you want to send.

    mvn copy:copyJar -Dhost="192.168.0.103" -Duser="user_name" -Dpass="pass_for_user_name"
        -Djar.path="/your/destination/path/for/jar/"

    to copy jar file to Linux system, where:
        -Dhost - host of the remote system
        -Duser - the user name for the Linux system
        -Dpass - password for the Linux system
        -Djar.path - the destination path on Linux system
